@using System.Web.Mvc
@using LiberMvc.Models

@helper Script(string scriptUrl, UrlHelper url)
{
	<script src="@url.Content("~/Scripts/" + scriptUrl)" type="text/javascript"></script>
}

@helper Css(string contentUrl, UrlHelper url)
{
	<link href="@url.Content("~/Content/" + contentUrl)" rel="stylesheet" type="text/css" />
}

@helper NomeAutor(Postagem post) {
<b>Por:</b>
		foreach (var i in post.Autores) {

			if (i.AutorID != post.Autores.Last().AutorID)
			{ 
				@i.Autor.Nome<text>, </text> 
			}
			else
			{
				@i.Autor.Nome
			}
		}
}


@helper NomePrimeiroAutor(Postagem post) {
    if(post.Autores.Count > 0) {
        @post.Autores.First().Autor.Nome
    }
}


@helper FotoPrimeiroAutor(Postagem post) {
    if(post.Autores.Count > 0) {
        @post.Autores.First().Autor.Foto
    }
}


@helper DescricaoPrimeiroAutor(Postagem post) {
    if(post.Autores.Count > 0) {
        @post.Autores.First().Autor.Descricao
    }
}

@helper FotoAutor(Postagem post) {
		foreach (var i in post.Autores) {

			if (i.AutorID != post.Autores.Last().AutorID)
			{ 
				@i.Autor.Foto<text>, </text> 
			}
			else
			{
				@i.Autor.Foto
			}
		}
}



@helper Image(string imageUrl, UrlHelper url, string alt = "")
	{
	<img src="@url.Content("~/Content/images/" + imageUrl)" alt="@alt"/>
}

@helper LinkedImage(string imageUrl, string link, UrlHelper url, string alt = "")
	{
	<a href="@link"><img src="@url.Content("~/Content/images/" + imageUrl)" alt="@alt"/></a>
}

@helper Pager(LiberMvc.IPaginatedList model, UrlHelper url)
	{
	
		var route = url.RequestContext.RouteData.Values;
		if (model.HasPreviousPage)
		{ 
		<a href="@url.RouteUrl(new { action = route["action"].ToString(), controller = route["controller"].ToString(), id = route["id"], page = (model.PageIndex - 1) })" class="button"><< Anterior</a>
		}

		if (model.HasNextPage)
		{ 
		<a href="@url.RouteUrl(new { action = route["action"].ToString(), controller = route["controller"].ToString(), id = route["id"], page = (model.PageIndex + 1) })" class="button">Próxima >></a>
		}
}
