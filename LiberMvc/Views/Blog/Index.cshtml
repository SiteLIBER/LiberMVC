@using LiberMvc.Models
@model LiberMvc.PaginatedList<Postagem>

@{ var route = Url.RequestContext.RouteData.Values; }

	<div class="panel">
		<h1>Blog</h1>



@{ foreach (var art in Model) { 
<div class="article_resume">
	<h2>
		@Html.ActionLink(art.Titulo, "Details", "Postagem", new { id = art.PostagemID, title = Url.FormatTitle(art.Titulo) }, null)
	</h2>
	<p class="general_informations">
		<span class="date">@art.PublicadoEm.ToShortDateString()</span>
		@Helper.NomeAutor(art)
	</p>
</div>
 } }

<div class="actions">
@if (Usuario.Logado.isEditor || Usuario.Logado.isAdmin) { 
	@Html.ActionLink("Criar novo", "Create", null, new { @class = "button" })
 } 

@if (Usuario.Logado.isAdmin) { 
	@Html.ActionLink("Listar para edição", "Table", null, new { @class = "button" })
 } 

@if (Model.HasPreviousPage) { 
	@Html.ActionLink("<< Anterior", route["action"].ToString(), new { id = route["id"], page = (Model.PageIndex - 1) }, new { @class = "button" })
 } 

@if (Model.HasNextPage)	{ 
	@Html.ActionLink("Próxima >>", route["action"].ToString(), new { id = route["id"], page = (Model.PageIndex + 1) }, new { @class = "button" })
 } 

	<br class="clear" />
</div>



	</div>

@section SideBar {

	 @Html.Partial("_SideBar") 

}

